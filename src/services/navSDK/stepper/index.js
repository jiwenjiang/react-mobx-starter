/**
 * Created by j_bleach on 2018/10/23 0023.
 */

import {destination} from "@turf/turf";
// import Kalman2 from "../kalman/Kalman";
//
// let Kalman = new Kalman2();
// let result = null;
// let source = [
//     [274.1251831, 0.010504957, "2018-12-10 14:08:46+08"],
//     [266.6305237, 0.161955392, "2018-12-10 14:08:46+08"],
//     [269.7292175, 0.575235392, "2018-12-10 14:08:46+08"],
//     [280.1982422, 0.197209493, "2018-12-10 14:08:47+08"],
//     [277.9427185, 0.518329368, "2018-12-10 14:08:47+08"],
//     [268.3833618, 0.264204477, "2018-12-10 14:08:47+08"],
//     [272.3061523, 0.364921229, "2018-12-10 14:08:48+08"],
//     [280.2401123, 0.339075392, "2018-12-10 14:08:48+08"],
//     [276.0975037, 0.280035392, "2018-12-10 14:08:48+08"],
//     [265.8947449, 0.337664077, "2018-12-10 14:08:48+08"],
//     [272.3934937, 0.265088557, "2018-12-10 14:08:49+08"],
//     [277.7719727, 0.392945991, "2018-12-10 14:08:49+08"],
//     [274.088623, 0.297768254, "2018-12-10 14:08:49+08"],
//     [267.3825989, 0.297768254, "2018-12-10 14:08:49+08"],
//     [271.2417908, 0.339075392, "2018-12-10 14:08:50+08"],
//     [274.0993958, 0.361686456, "2018-12-10 14:08:50+08"],
//     [273.5877686, 0.281022683, "2018-12-10 14:08:50+08"],
//     [265.929657, 0.317767723, "2018-12-10 14:08:51+08"],
//     [270.5265198, 0.296666378, "2018-12-10 14:08:51+08"],
//     [277.8283386, 0.394835392, "2018-12-10 14:08:51+08"],
//     [271.3161316, 0.279054661, "2018-12-10 14:08:51+08"],
//     [262.2991028, 0.317767723, "2018-12-10 14:08:52+08"],
//     [268.1126709, 0.316520785, "2018-12-10 14:08:52+08"],
//     [276.9233398, 0.364921229, "2018-12-10 14:08:52+08"],
//     [272.4090576, 0.297768254, "2018-12-10 14:08:52+08"],
//     [260.3485107, 0.316520785, "2018-12-10 14:08:53+08"],
//     [266.9065552, 0.297768254, "2018-12-10 14:08:53+08"],
//     [277.7069397, 0.392945991, "2018-12-10 14:08:53+08"],
//     [268.0791931, 0.250781338, "2018-12-10 14:08:53+08"],
//     [257.0083313, 0.427635392, "2018-12-10 14:08:54+08"],
//     [267.7866211, 0.249985093, "2018-12-10 14:08:54+08"],
//     [278.3616943, 0.429860518, "2018-12-10 14:08:54+08"],
//     [273.223999, 0.296666378, "2018-12-10 14:08:55+08"],
//     [265.7948608, 0.339075392, "2018-12-10 14:08:55+08"],
//     [271.1975403, 0.316520785, "2018-12-10 14:08:55+08"],
//     [277.8353882, 0.394835392, "2018-12-10 14:08:55+08"],
//     [265.6742859, 0.279054661, "2018-12-10 14:08:56+08"],
//     [254.9112091, 0.340498043, "2018-12-10 14:08:56+08"],
//     [261.7714539, 0.316520785, "2018-12-10 14:08:56+08"],
//     [268.8440857, 0.392945991, "2018-12-10 14:08:56+08"],
//     [260.6046753, 0.237863964, "2018-12-10 14:08:57+08"],
//     [251.4692383, 0.427635392, "2018-12-10 14:08:57+08"],
//     [266.6437988, 0.280035392, "2018-12-10 14:08:57+08"],
//     [278.6611633, 0.392945991, "2018-12-10 14:08:57+08"],
//     [271.2948608, 0.265088557, "2018-12-10 14:08:58+08"],
//     [262.7064819, 0.339075392, "2018-12-10 14:08:58+08"],
//     [265.1886597, 0.334874918, "2018-12-10 14:08:58+08"],
//     [268.6983948, 0.368212016, "2018-12-10 14:08:58+08"],
//     [258.6148376, 0.281022683, "2018-12-10 14:08:59+08"],
//     [247.9844971, 0.316520785, "2018-12-10 14:08:59+08"],
//     [250.9599609, 0.339075392, "2018-12-10 14:08:59+08"],
//     [265.3890381, 0.339075392, "2018-12-10 14:08:59+08"],
//     [261.7504883, 0.316520785, "2018-12-10 14:09:00+08"],
//     [251.3345032, 0.280035392, "2018-12-10 14:09:00+08"],
//     [258.153656, 0.316520785, "2018-12-10 14:09:00+08"],
//     [270.2471313, 0.364921229, "2018-12-10 14:09:01+08"],
//     [263.3963013, 0.317767723, "2018-12-10 14:09:01+08"],
//     [250.8126678, 0.316520785, "2018-12-10 14:09:01+08"],
//     [259.3309937, 0.297768254, "2018-12-10 14:09:01+08"],
//     [265.3752441, 0.392945991, "2018-12-10 14:09:02+08"],
//     [267.9537048, 0.315283153, "2018-12-10 14:09:02+08"],
//     [254.9477844, 0.2820166, "2018-12-10 14:09:02+08"],
//     [258.631897, 0.315283153, "2018-12-10 14:09:02+08"],
//     [267.9553223, 0.36655953, "2018-12-10 14:09:03+08"],
//     [257.9032288, 0.337664077, "2018-12-10 14:09:03+08"],
//     [241.2771606, 0.281022683, "2018-12-10 14:09:03+08"],
//     [246.0016937, 0.316520785, "2018-12-10 14:09:03+08"],
//     [250.8691711, 0.364921229, "2018-12-10 14:09:04+08"],
//     [241.5635834, 0.364921229, "2018-12-10 14:09:04+08"],
//     [227.5415039, 0.280035392, "2018-12-10 14:09:04+08"],
//     [227.8342285, 0.339075392, "2018-12-10 14:09:04+08"],
//     [234.2926178, 0.339075392, "2018-12-10 14:09:05+08"],
//     [225.0189819, 0.339075392, "2018-12-10 14:09:05+08"],
//     [214.4710236, 0.215460392, "2018-12-10 14:09:05+08"],
//     [207.5940704, 0.429860518, "2018-12-10 14:09:06+08"],
//     [205.1773987, 0.337664077, "2018-12-10 14:09:06+08"],
//     [191.8107147, 0.250781338, "2018-12-10 14:09:06+08"],
//     [175.9218597, 0.363296931, "2018-12-10 14:09:06+08"],
//     [174.7238617, 0.316520785, "2018-12-10 14:09:07+08"],
//     [184.1611938, 0.36655953, "2018-12-10 14:09:07+08"],
//     [178.3355103, 0.296666378, "2018-12-10 14:09:07+08"],
//     [161.8755951, 0.339075392, "2018-12-10 14:09:07+08"],
//     [167.5815582, 0.316520785, "2018-12-10 14:09:08+08"],
//     [176.1358643, 0.339075392, "2018-12-10 14:09:08+08"],
//     [170.1985626, 0.264204477, "2018-12-10 14:09:08+08"],
//     [157.3283081, 0.392945991, "2018-12-10 14:09:08+08"],
//     [163.4708405, 0.340498043, "2018-12-10 14:09:09+08"],
//     [177.592926, 0.337664077, "2018-12-10 14:09:09+08"],
//     [164.2233276, 0.238588974, "2018-12-10 14:09:09+08"],
//     [153.3353271, 0.427635392, "2018-12-10 14:09:09+08"],
//     [162.6821747, 0.339075392, "2018-12-10 14:09:10+08"],
//     [173.8694611, 0.337664077, "2018-12-10 14:09:10+08"],
//     [166.3138733, 0.297768254, "2018-12-10 14:09:10+08"],
//     [155.4693298, 0.339075392, "2018-12-10 14:09:11+08"],
//     [163.5866852, 0.297768254, "2018-12-10 14:09:11+08"],
//     [174.3564148, 0.364921229, "2018-12-10 14:09:11+08"],
//     [166.3866119, 0.280035392, "2018-12-10 14:09:11+08"],
//     [150.7385864, 0.317767723, "2018-12-10 14:09:12+08"],
//     [157.4610748, 0.337664077, "2018-12-10 14:09:12+08"],
//     [169.046402, 0.364921229, "2018-12-10 14:09:12+08"],
//     [172.7496948, 0.315283153, "2018-12-10 14:09:12+08"],
//     [160.3177185, 0.317767723, "2018-12-10 14:09:13+08"],
//     [168.6929474, 0.297768254, "2018-12-10 14:09:13+08"],
//     [189.1255035, 0.392945991, "2018-12-10 14:09:13+08"],
//     [180.1631012, 0.280035392, "2018-12-10 14:09:13+08"],
//     [168.4025879, 0.339075392, "2018-12-10 14:09:14+08"],
//     [179.2953491, 0.296666378, "2018-12-10 14:09:14+08"],
//     [187.1330414, 0.394835392, "2018-12-10 14:09:14+08"],
//     [185.2157288, 0.280035392, "2018-12-10 14:09:14+08"],
//     [181.1038361, 0.317767723, "2018-12-10 14:09:15+08"],
//     [186.065094, 0.316520785, "2018-12-10 14:09:15+08"],
//     [194.555603, 0.394835392, "2018-12-10 14:09:15+08"],
//     [188.9239807, 0.296666378, "2018-12-10 14:09:16+08"],
//     [179.6304016, 0.317767723, "2018-12-10 14:09:16+08"],
//     [184.7357635, 0.297768254, "2018-12-10 14:09:16+08"],
//     [190.2948456, 0.391073924, "2018-12-10 14:09:16+08"],
//     [186.4348907, 0.297768254, "2018-12-10 14:09:17+08"],
//     [180.2406769, 0.316520785, "2018-12-10 14:09:17+08"],
//     [184.2635345, 0.297768254, "2018-12-10 14:09:17+08"],
//     [191.5835114, 0.364921229, "2018-12-10 14:09:17+08"],
//     [184.7344513, 0.264204477, "2018-12-10 14:09:18+08"],
//     [169.5569, 0.339075392, "2018-12-10 14:09:18+08"],
//     [177.0895691, 0.316520785, "2018-12-10 14:09:18+08"],
//     [188.3208618, 0.394835392, "2018-12-10 14:09:18+08"],
//     [183.9541626, 0.264204477, "2018-12-10 14:09:19+08"],
//     [169.3229828, 0.364921229, "2018-12-10 14:09:19+08"],
//     [174.1689758, 0.296666378, "2018-12-10 14:09:19+08"],
//     [185.2479095, 0.394835392, "2018-12-10 14:09:19+08"],
//     [182.4169006, 0.339075392, "2018-12-10 14:09:20+08"],
//     [173.2622528, 0.264204477, "2018-12-10 14:09:20+08"],
//     [180.1130371, 0.317767723, "2018-12-10 14:09:20+08"],
//     [186.467865, 0.339075392, "2018-12-10 14:09:21+08"],
//     [182.8643341, 0.337664077, "2018-12-10 14:09:21+08"],
//     [172.3142242, 0.297768254, "2018-12-10 14:09:21+08"],
//     [178.5906677, 0.339075392, "2018-12-10 14:09:21+08"],
//     [187.8174133, 0.364921229, "2018-12-10 14:09:22+08"],
//     [180.9129028, 0.280035392, "2018-12-10 14:09:22+08"],
//     [172.3466797, 0.339075392, "2018-12-10 14:09:22+08"],
//     [182.2340851, 0.296666378, "2018-12-10 14:09:22+08"],
//     [186.0349884, 0.396742369, "2018-12-10 14:09:23+08"],
//     [173.3037567, 0.263325958, "2018-12-10 14:09:23+08"],
//     [162.1091156, 0.392945991, "2018-12-10 14:09:23+08"],
//     [172.694519, 0.319024071, "2018-12-10 14:09:23+08"],
//     [186.4067078, 0.361686456, "2018-12-10 14:09:24+08"],
//     [179.8311615, 0.297768254, "2018-12-10 14:09:24+08"],
//     [166.3966217, 0.298877945, "2018-12-10 14:09:24+08"],
//     [174.6886292, 0.337664077, "2018-12-10 14:09:24+08"],
//     [187.4573059, 0.392945991, "2018-12-10 14:09:25+08"],
//     [177.0368805, 0.25158238, "2018-12-10 14:09:25+08"],
//     [165.0830841, 0.391073924, "2018-12-10 14:09:25+08"],
//     [170.2540894, 0.316520785, "2018-12-10 14:09:25+08"],
//     [177.2781219, 0.316520785, "2018-12-10 14:09:26+08"],
//     [168.5421753, 0.297768254, "2018-12-10 14:09:26+08"],
//     [160.4345856, 0.339075392, "2018-12-10 14:09:26+08"],
//     [175.8043518, 0.280035392, "2018-12-10 14:09:27+08"],
//     [189.4565582, 0.392945991, "2018-12-10 14:09:27+08"],
//     [182.65625, 0.280035392, "2018-12-10 14:09:27+08"],
//     [175.6466217, 0.340498043, "2018-12-10 14:09:27+08"],
//     [180.1368561, 0.296666378, "2018-12-10 14:09:28+08"],
//     [184.9409637, 0.394835392, "2018-12-10 14:09:28+08"],
//     [179.7428741, 0.250781338, "2018-12-10 14:09:28+08"],
//     [174.3988647, 0.392945991, "2018-12-10 14:09:28+08"],
//     [179.3871765, 0.296666378, "2018-12-10 14:09:29+08"],
//     [183.928299, 0.394835392, "2018-12-10 14:09:29+08"],
//     [179.8768463, 0.280035392, "2018-12-10 14:09:29+08"],
//     [174.1042786, 0.317767723, "2018-12-10 14:09:29+08"],
//     [179.2285767, 0.280035392, "2018-12-10 14:09:30+08"],
//     [185.9360199, 0.425432407, "2018-12-10 14:09:30+08"],
//     [182.0297394, 0.281022683, "2018-12-10 14:09:30+08"],
//     [176.1699219, 0.337664077, "2018-12-10 14:09:31+08"],
//     [180.0515747, 0.298877945, "2018-12-10 14:09:31+08"],
//     [187.5389709, 0.391073924, "2018-12-10 14:09:31+08"],
//     [182.3997803, 0.280035392, "2018-12-10 14:09:31+08"],
//     [174.6060486, 0.339075392, "2018-12-10 14:09:32+08"],
//     [180.2909393, 0.280035392, "2018-12-10 14:09:32+08"],
//     [185.4744873, 0.392945991, "2018-12-10 14:09:32+08"],
//     [181.521347, 0.265088557, "2018-12-10 14:09:32+08"],
//     [172.8839569, 0.317767723, "2018-12-10 14:09:33+08"],
//     [180.6914215, 0.315283153, "2018-12-10 14:09:33+08"],
//     [189.0021973, 0.363296931, "2018-12-10 14:09:33+08"],
//     [183.5329132, 0.298877945, "2018-12-10 14:09:33+08"],
//     [175.5441742, 0.296666378, "2018-12-10 14:09:34+08"],
//     [179.9679413, 0.317767723, "2018-12-10 14:09:34+08"],
//     [183.6018829, 0.392945991, "2018-12-10 14:09:34+08"],
//     [175.5897675, 0.250781338, "2018-12-10 14:09:35+08"],
//     [166.9172363, 0.339075392, "2018-12-10 14:09:35+08"],
//     [173.014389, 0.316520785, "2018-12-10 14:09:35+08"],
//     [178.9929657, 0.316520785, "2018-12-10 14:09:35+08"],
//     [170.6306763, 0.364921229, "2018-12-10 14:09:36+08"],
//     [168.1718597, 0.264204477, "2018-12-10 14:09:36+08"],
//     [175.7754974, 0.364921229, "2018-12-10 14:09:36+08"],
//     [183.0101929, 0.317767723, "2018-12-10 14:09:36+08"],
//     [177.7236633, 0.337664077, "2018-12-10 14:09:37+08"],
//     [185.1733093, 0.297768254, "2018-12-10 14:09:37+08"],
//     [184.095459, 0.091149918, "2018-12-10 14:09:38+08"],
//     [192.6140594, 0.067834455, "2018-12-10 14:09:39+08"],
//     [191.5050201, 0.515134793, "2018-12-10 14:09:39+08"],
//
// ];
// let ibeacon = [
//
//     // [104.0610161, 30.59749238, "2018-12-10 14:08:45+08"],
//     [104.0610357, 30.59749236, "2018-12-10 14:08:46+08"],
//     [104.061003, 30.59749239, "2018-12-10 14:08:47+08"],
//     [104.061003, 30.59749239, "2018-12-10 14:08:48+08"],
//     [104.061003, 30.59749239, "2018-12-10 14:08:49+08"],
//     [104.0609507, 30.59749243, "2018-12-10 14:08:50+08"],
//     [104.0609507, 30.59749243, "2018-12-10 14:08:51+08"],
//     [104.0609573, 30.59749242, "2018-12-10 14:08:52+08"],
//     [104.0609377, 30.59749244, "2018-12-10 14:08:53+08"],
//     [104.0609377, 30.59749244, "2018-12-10 14:08:54+08"],
//     [104.0609377, 30.59749244, "2018-12-10 14:08:55+08"],
//     [104.0608135, 30.59749253, "2018-12-10 14:08:56+08"],
//     [104.0608135, 30.59749253, "2018-12-10 14:08:57+08"],
//     [104.0608135, 30.59749253, "2018-12-10 14:08:58+08"],
//     [104.0608135, 30.59749253, "2018-12-10 14:08:59+08"],
//     [104.0608135, 30.59749253, "2018-12-10 14:09:00+08"],
//     [104.0608331, 30.59749252, "2018-12-10 14:09:01+08"],
//     [104.060807, 30.59749254, "2018-12-10 14:09:02+08"],
//     [104.0608004, 30.59749254, "2018-12-10 14:09:03+08"],
//     [104.060807, 30.59749254, "2018-12-10 14:09:04+08"],
//     [104.0608396, 30.59749251, "2018-12-10 14:09:05+08"],
//     [104.060807, 30.59749254, "2018-12-10 14:09:06+08"],
//     [104.0607768, 30.59749396, "2018-12-10 14:09:07+08"],
//     [104.0607756, 30.59740403, "2018-12-10 14:09:08+08"],
//     [104.0607756, 30.59740403, "2018-12-10 14:09:09+08"],
//     [104.0607753, 30.59737592, "2018-12-10 14:09:10+08"],
//     [104.0607753, 30.59737592, "2018-12-10 14:09:11+08"],
//     [104.0607753, 30.59737592, "2018-12-10 14:09:12+08"],
//     [104.0607758, 30.59741527, "2018-12-10 14:09:13+08"],
//     [104.0607758, 30.59741527, "2018-12-10 14:09:14+08"],
//     [104.0607748, 30.5973422, "2018-12-10 14:09:15+08"],
//     [104.0607748, 30.5973422, "2018-12-10 14:09:16+08"],
//     [104.0607749, 30.59734782, "2018-12-10 14:09:17+08"],
//     [104.0607749, 30.59734782, "2018-12-10 14:09:18+08"],
//     [104.0607749, 30.59734782, "2018-12-10 14:09:19+08"],
//     [104.0607744, 30.59730847, "2018-12-10 14:09:20+08"],
//     [104.0607744, 30.59730847, "2018-12-10 14:09:21+08"],
//     [104.0607727, 30.59717358, "2018-12-10 14:09:22+08"],
//     [104.0607732, 30.59721292, "2018-12-10 14:09:23+08"],
//     [104.0607742, 30.59729723, "2018-12-10 14:09:24+08"],
//     [104.0607727, 30.5971792, "2018-12-10 14:09:28+08"],
//     [104.0607728, 30.59718482, "2018-12-10 14:09:29+08"],
//     [104.0607727, 30.5971792, "2018-12-10 14:09:30+08"],
//     [104.0607727, 30.5971792, "2018-12-10 14:09:31+08"],
//     [104.060773, 30.59720168, "2018-12-10 14:09:32+08"],
//     [104.060773, 30.59720168, "2018-12-10 14:09:33+08"],
//     [104.060773, 30.59720168, "2018-12-10 14:09:34+08"],
//     [104.0607723, 30.59714547, "2018-12-10 14:09:37+08"],
//     [104.0607723, 30.59714547, "2018-12-10 14:09:38+08"],
//     [104.0607723, 30.59714547, "2018-12-10 14:09:39+08"],
//     [104.0607723, 30.59714547, "2018-12-10 14:09:40+08"],
// ];
// let counter = 0;
// let counter_i = 0;
// let aaa;
// let init = [104.0610161, 30.59749238];
// setTimeout(() => {
//     let timer = setInterval(() => {
//
//         if (!source[counter + 1] || !source[counter] || !ibeacon[counter_i]) {
//             clearInterval(timer);
//             return;
//         }
//
//
//         let output = destination(init, source[counter][1] / 1000, source[counter][0]);
//
//         pushLoc(output);
//         output = aaa;
//         if (!output) {
//             clearInterval(timer);
//             return;
//         }
//         if (source[counter - 1][2] === ibeacon[counter_i][2]) {
//             // Kalman.pushiBeacon([ibeacon[counter_i][0], ibeacon[counter_i][1]]);
//             counter_i++;
//         }
//         init = [output.geometry.coordinates[0], output.geometry.coordinates[1]];
//
//         // Kalman.pushStepper(init);
//         result = Kalman.updateLocation(init, result ? result : init);
//         window.kalmanPt = result;
//
//         // window.initFreeMarker({
//         //     longitude: p.lon,
//         //     latitude: p.lat,
//         //     level: 13, locType: "ibeacon"
//         // });
//         counter++;
//     }, 500);
// }, 2000);
//
// function pushLoc(output) {
//     if (!source[counter + 1]) {
//         return;
//     }
//     if (source[counter + 1][2] === source[counter][2]) {
//         counter++;
//         init = [output.geometry.coordinates[0], output.geometry.coordinates[1]];
//         let sss = destination(init, source[counter][1] / 1000, source[counter][0]);
//         pushLoc(sss);
//     } else {
//         aaa = destination(init, source[counter][1] / 1000, source[counter][0]);
//     }
// }

/*eslint-disable*/
const stepperFn = (target) => {
    let h = [.003, .556, 1.083, 1.492, 1.682, 1.56, 1.102, .394, -.382, -1.018, -1.378, -1.445, -1.3, -1.053, -.78, -.489]
        , g = 0
        , m = 0
        , v = 0
        , C = false
        , b = Array(16)
        , yy = true
        , w = Date.now()
        , B = 0
        , x = 0
        , y = 0
        , z = 0
        , E = 0
        , S = Date.now()
        , O = void 0
        , T = 0
        , M = 0
        , R = 0
        , I = 0
        , stepDistance = 0
        , totalDistance = 0
    ;
    let sampleCount = 0,
        saveTime = Date.now(),
        saveTotalAcc = 0;
    let timer = null;


    return class stepper extends target {
        constructor() {
            super();
        }

        initStepper(loc) {
            console.log("进入步进器");
            // 重置当前位置至质心点
            this.initPolygonLocate = setInterval(() => {
                if (loc.currentPosition.locType == "ibeacon") {
                    if (loc.currentPosition.longitude) {
                        this.currentPoint = {
                            isOutdoor: loc.currentPosition.isOutdoor,
                            buildingId: loc.currentPosition.buildingId,
                            level: loc.currentPosition.level,
                            locType: loc.currentPosition.locType,
                            orientation: this.alpha,
                            longitude: loc.currentPosition.longitude,
                            latitude: loc.currentPosition.latitude,
                            timer: new Date().getTime()
                        };
                        this.lastLocation = this.currentPoint;
                        this.tempLocation = this.currentPoint;
                        this.stepLocation = this.currentPoint;
                        clearInterval(this.initPolygonLocate);
                        this.onFreeStep(this.currentPoint);
                        this.resetFn();
                    }
                }
            }, 1000);
            setTimeout(() => {
                // 10秒后取消搜索
                clearInterval(this.initPolygonLocate);
            }, 10000);
            // 步进器
            window.addEventListener("devicemotion", (e) => {
                if (this.inElevator) {
                    return false;
                }
                let n = e.accelerationIncludingGravity;
                this.checkInAccSensor(n.x, n.y, n.z);
                this.handleMessage();
            }, false);
        }

        stepAlgorithm() {
            let t = false;
            let stepFilter = this.loc.currentLocation == "ibeacon" ? 15 : 9;
            if (yy) {
                if (m > stepFilter) {
                    yy = false;
                    t = true;
                }
            } else {
                if (m < -stepFilter) {
                    yy = true;
                    t = true;
                }
            }
            if (t && 0 !== (v += .5) && v !== B) {
                O = Date.now();
                T = 1000 / (O - S);
                M = 2.4 * (1.8 * (20.5 * T - 0.265487) - 5.84071 + 0);
                R += M;
                B = v;
                S = O;
                C = !0;
                w = Date.now();
                I = M / 100 * T;
                stepDistance = M;
                this.step(v, M);
            }
        }

        //计算结果
        step(v, M) {
            totalDistance = totalDistance + M;
            let stepDistance = window.parseFloat(M / 1000 / 1000);
            clearTimeout(this.stepTimeout);
            this.threeSecondPause = false;
            this.stepTimeout = setTimeout(() => {
                this.threeSecondPause = true;
            }, 3000);
            const output = destination([this.stepLocation.longitude, this.stepLocation.latitude],
                stepDistance, this.alpha);
            // let level = this.stepLocation.level;
            this.stepLocation = {
                isOutdoor: this.loc.currentPosition.isOutdoor,
                buildingId: this.currentPoint.buildingId,
                locType: this.loc.currentPosition.locType,
                orientation: this.alpha,
                accuracy: this.loc.currentPosition.accuracy,
                longitude: output.geometry.coordinates[0],
                latitude: output.geometry.coordinates[1],
                timer: new Date().getTime()
            };
            // if (this.currentMode == "free") {
            //     this.stepLocation = {...this.stepLocation, level: this.loc.currentPosition.level};
            // this.currentPoint = this.stepLocation;
            // this.onFreeStep(this.currentPoint);
            // }
            // if (this.currentMode == "realNav") {
            //     this.stepLocation = {...this.stepLocation, level};
            // this.onRealNavStep(this.currentPoint);
            // }
            // this.initPolygonLocate && clearInterval(this.initPolygonLocate);
        }

        machine(t) {
            if (16 === g) {
                g = 0;
            }
            b[g] = t;
            for (var e = g, n = 0, r = 0; r < 16; r++) {
                n += h[r] * (b[e] || 0);
                if (-1 === --e) {
                    e = 15;
                }
            }
            g++,
                m = n,
                this.stepAlgorithm();
            return m;
        }

        checkInAccSensor(t, e, n) {
            x += t,
                y += e,
                z += n,
                E++;
        }

        r(t) {
            return t * t;
        }


        sleep(sleTime) {
            if (timer) {
                clearTimeout(timer);
            }

            timer = setTimeout(() => {
                this.handleMessage();
            }, sleTime || 0);
        }

        handleMessage() {
            let sleTime = 0, e = 0;
            if (0 == E) {
                e = saveTotalAcc;
            } else {
                e = this.r(x / E) + this.r(y / E) + this.r(z / E);
                e = Math.pow(e, .5);
                x = 0;
                y = 0;
                z = 0;
                E = 0;
                saveTotalAcc = e;

                for (this.machine(e - 9.8); ;) {
                    if ((sleTime = 40 * +saveTime - Date.now()) > 10) {
                        break;
                    }
                    if (sleTime < -1000) {
                        saveTime = Date.now(),
                            sampleCount = 0;
                        break;
                    }
                    this.machine(e - 9.8),
                        sampleCount++;
                }

                this.sleep(sleTime - 5);
            }

        }
    };
};

export default stepperFn;
